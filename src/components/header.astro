---
import { Image } from 'astro:assets'
import pfpImage from '@/assets/carousel/pfp.webp'
import { getUI } from '@/utils/i18n.astro'
import styles from './header.module.css'

const { lang } = Astro.params

const getPath = (path: string) =>
  `${Astro.url.origin}${lang === 'ja' ? '/ja' : ''}${path}`

const { header } = getUI(lang ?? 'en')

const navItems = [
  { href: getPath('/'), label: header.home, section: 'home' },
  { href: getPath('/#hobbies'), label: header.hobbies, section: 'hobbies' },
  {
    href: getPath('/#experiences'),
    label: header.experiences,
    section: 'experiences',
  },
  { href: getPath('/#skills'), label: header.skills, section: 'skills' },
  { href: getPath('/#projects'), label: header.projects, section: 'projects' },
  { href: getPath('/journey'), label: header.journey, section: 'journey' },
]
---

<header id="header" class={styles.header}>
  <div class={styles.header__container}>
    <a href="/" class={styles.header__logo}>
      <Image
        src={pfpImage}
        alt="Shintaro Jokagi"
        loading="eager"
        width={40}
        height={40}
      />
    </a>
    <nav id="main-nav" class={styles.header__nav}>
      {
        navItems.map((item) => (
          <a
            href={item.href}
            class={styles.header__nav_link}
            data-section={item.section}
            data-active="false"
          >
            {item.label}
            <span class={styles.header__nav_link_indicator} />
          </a>
        ))
      }
    </nav>
  </div>
</header>

<script>
  const navItems = document.querySelectorAll('#main-nav a')
  const sectionEls = document.querySelectorAll('section[id]')

  function getActiveSection() {
    const scrollPosition = window.scrollY
    const windowHeight = window.innerHeight
    for (const section of sectionEls) {
      const sectionTop = (section as HTMLElement).offsetTop
      const sectionHeight = (section as HTMLElement).offsetHeight
      if (
        scrollPosition >= sectionTop - windowHeight / 2 &&
        scrollPosition < sectionTop + sectionHeight - windowHeight / 2
      ) {
        return section.id === 'hero' ? 'home' : section.id
      }
    }
    return null
  }

  function updateActiveIndicator(activeSection: string | null) {
    navItems.forEach((item) =>
      item.setAttribute(
        'data-active',
        item.getAttribute('data-section') === activeSection ? 'true' : 'false'
      )
    )
  }

  function handleActive() {
    updateActiveIndicator(getActiveSection())
  }

  window.addEventListener('scroll', handleActive)
  window.addEventListener('resize', handleActive)
  handleActive()
</script>
